name: Deploy to AWS EKS

on:
  push:
    branches: [ "*" ]
  pull_request:
permissions:
  contents: read

jobs:

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '20'
          distribution: 'adopt'
      - run: mvn test

  build:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '20'
          distribution: 'adopt'
      - name: Package
        run: mvn package -DskipTests

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t testeluismatos/jlapp-eks:latest .
          docker push testeluismatos/jlapp-eks:latest

  deploy:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install and configure AWS CLI
        run: |
          curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name jlapp-cluster

      - name: Deploy Database
        run: |
          kubectl apply -f k8s/DB
      - name: Deploy Service
        run: |
          kubectl apply -f k8s/
      - name: Deploy Metrics
        run: |
          kubectl apply -f k8s/Metrics