version: '3'

services:

  postgres:
    image: postgres:latest
    container_name: db_postgres
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=db_lanchonete
    ports:
      - "5432:5432"
    networks:
      - network_postgres
    volumes:
      - jlapp:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: web_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "pos@tech.com"
      PGADMIN_DEFAULT_PASSWORD: "postech123"
    ports:
      - "54321:80"
    networks:
      - network_postgres
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: 128M

  nginx:
    restart: 'always'
    build:
      context: ./nginx
      dockerfile: Dockerfile
    networks:
      - network_service
    ports:
      - "8070:7000"
    depends_on: 
      - jlapp
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  jlapp:
    build:
      context: ./
      dockerfile: Dockerfile
    image: testeluismatos/jlapp:1.0.0
    hostname: jlapp01
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATABASE=postgres
      - JAVA_OPTS=-server -Xms256M -Xmx512M -XX:ThreadStackSize=20000 -Xss4M -XX:NativeMemoryTracking=summary
    expose:
      - "8070"
    networks:
      - network_postgres
      - network_service
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M


volumes:
  jlapp:
    driver: local

networks:
  network_service:
    driver: bridge
  network_postgres:
    driver: bridge