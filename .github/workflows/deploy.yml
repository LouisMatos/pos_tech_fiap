name: Implantar no AWS Elastic Beanstalk

on:
  push:
    branches:
      - master

jobs:
  create_elastic_beanstalk:
    runs-on: ubuntu-latest

    steps:
      - name: Instalar e configurar AWS CLI
        run: |
          curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}

      - name: Listar soluções stack disponíveis
        run: aws elasticbeanstalk list-available-solution-stacks

      - name: Criar ambiente Elastic Beanstalk se não existir
        run: |
          ENV_EXISTS=$(aws elasticbeanstalk describe-environments --application-name jlapp --environment-names envJlapp --query "Environments[0].EnvironmentName" --output text)
          if [ "$ENV_EXISTS" != "envJlapp" ]; then
            aws elasticbeanstalk create-environment --application-name jlapp --environment-name envJlapp --solution-stack-name "64bit Amazon Linux 2 v3.6.4 running Corretto 17"
          fi

  deploy:
    needs: create_elastic_beanstalk
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v2
        
      - name: Configurar JDK 20
        uses: actions/setup-java@v1
        with:
          java-version: 20

      - name: Construir com Maven
        run: mvn clean install

      - name: Implantar no AWS Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ secrets.AWS_REGION }}
          application_name: jlapp
          environment_name: envJlapp
          version_label: ${{ github.run_id }}
          deployment_package: target/jlapp-0.0.1-SNAPSHOT.jar
